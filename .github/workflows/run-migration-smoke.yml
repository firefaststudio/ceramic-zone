name: Run migration and smoke tests

on:
  workflow_dispatch:

jobs:
  migration-and-smoke:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install npm dependencies
        run: npm ci

      - name: Wait for Postgres service
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Run migration & smoke script
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
        run: |
          echo "Starting migration and smoke tests..." | tee migration-log.txt
          echo "Applying SQL migration..." | tee -a migration-log.txt
          psql "$DATABASE_URL" -f 001_create_tables.sql 2>&1 | tee -a migration-log.txt
          echo "Migrating products..." | tee -a migration-log.txt
          node scripts/migrate-products.js 2>&1 | tee -a migration-log.txt
          echo "Starting server..." | tee -a migration-log.txt
          node index.js &
          SERVER_PID=$!
          sleep 5
          echo "Running smoke tests..." | tee -a migration-log.txt
          npm run smoke 2>&1 | tee -a migration-log.txt
          kill $SERVER_PID 2>/dev/null || true

      - name: Export dumps and counts
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
        run: |
          psql "$DATABASE_URL" -c "SELECT count(*) AS products_count FROM products;" > dump-products-count.txt
          psql "$DATABASE_URL" -c "COPY (SELECT * FROM orders) TO STDOUT WITH CSV HEADER;" > dump-orders.txt
          psql "$DATABASE_URL" -c "COPY (SELECT * FROM order_items) TO STDOUT WITH CSV HEADER;" > dump-order_items.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: migration-smoke-artifacts
          path: |
            dump-products-count.txt
            dump-orders.txt
            dump-order_items.txt
            smoke-report.json
            migration-log.txt
